name: Preprod CI/CD

on:
  pull_request:
    branches: [ preprod ]
  push:
    branches: [ preprod ]

concurrency:
  group: preprod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Vérifier la config Docker Compose
        run: docker compose -f docker-compose.yml -f docker-compose.preprod.yml config > /dev/null

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Démarrer l'agent SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.RPI_SSH_PRIVATE_KEY }}

      - name: Ajouter le Pi dans known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.RPI_PORT }}" -H "${{ secrets.RPI_HOST }}" >> ~/.ssh/known_hosts

      - name: Déployer sur le Raspberry Pi
        env:
          RPI_HOST: ${{ secrets.RPI_HOST }}
          RPI_PORT: ${{ secrets.RPI_PORT }}
          RPI_USER: ${{ secrets.RPI_USER }}
          RPI_PATH: ${{ secrets.RPI_PATH }}
        run: |
          set -euo pipefail
          # Clé/known_hosts: déjà fait dans les étapes précédentes
          ssh -o StrictHostKeyChecking=no -p "$RPI_PORT" "$RPI_USER@$RPI_HOST" bash -s <<EOF
            set -euo pipefail
            cd "$RPI_PATH"          # <� ici la valeur est déj& résolue par le runner
            echo "Dans: \$(pwd)"
            git fetch --all
            git reset --hard origin/preprod
            make preprod
          EOF
