# Etape 1 : build de l'application
FROM golang:1.23-alpine AS builder

#Définir le répertoire de travail
WORKDIR /app

# Installer air pour le hot-reload
RUN apk add --no-cache curl && \
    curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b /usr/local/bin

#copier les fichier go mod 
COPY go.mod go.sum ./
RUN go mod download

#COPIER tout le code source
COPY . .

#COMPILER l'application
RUN go build -o main .

# Etape 2 : Image finale
FROM alpine:latest AS runtime

WORKDIR /root/

# Installer `mysql-client` pour attendre MySQL
RUN apk add --no-cache mysql-client

#Copier l'exécutable depuis le build
COPY --from=builder /app/main .
COPY --from=builder /usr/local/bin/air /usr/local/bin/air

RUN chmod +x /root/main /usr/local/bin/air

#Exposer le port 
EXPOSE 8080

# Lancer l'application
CMD ["/root/main"]

#Etape 3 : Image pour le devellopement (contient go)
FROM golang:1.23-alpine AS dev

WORKDIR /app

# Installer Go et `air` pour le hot-reload
RUN apk add --no-cache git curl gcc g++ musl-dev && \
    curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b /usr/local/bin

#Copier le code Source
COPY . .

#Expose les port
EXPOSE 8080

#Lancer `air` pour le developpement
CMD ["air"] 