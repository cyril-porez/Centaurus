user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # logs (facultatif)
  log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;

  sendfile on;
  keepalive_timeout 65;

  # Gzip
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain application/xml application/json text/javascript text/css application/x-javascript text/xml application/xml+rss;

  # DNS Docker pour r�soudre "backend"
  resolver 127.0.0.11 ipv6=off;

  # ===================== 80 (HTTP) =====================
  # Laisse passer ACME en HTTP, tout le reste redirig� vers HTTPS
  server {
    listen 80;
    server_name centaurus-preprod.duckdns.org;

    # ACME challenge (Certbot --webroot)
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Redirection globale vers HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # ===================== 443 (HTTPS) =====================
  server {
    listen 443 ssl http2;
    server_name centaurus-preprod.duckdns.org;

    # Chemins du cert (le lien "canonique" pointe sur -0001)
    ssl_certificate     /etc/letsencrypt/live/centaurus-preprod.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/centaurus-preprod.duckdns.org/privkey.pem;

    # (bonus s�cu) HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # PWA (build React copi� dans /usr/share/nginx/html)
    root  /usr/share/nginx/html;
    index index.html;

    # SPA routing
    location / {
      try_files $uri /index.html;
    }

    # API -> backend (r�seau Docker)
    location /api/ {
      proxy_pass http://backend:8080;
      proxy_http_version 1.1;

      proxy_set_header Host                $host;
      proxy_set_header X-Real-IP           $remote_addr;
      proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto   $scheme;
      proxy_set_header Upgrade             $http_upgrade;
      proxy_set_header Connection          "upgrade";

      proxy_read_timeout 60s;
      proxy_send_timeout 60s; 
    }

    # Cache des assets statiques
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|webmanifest|json)$ {
      expires 6M;
      access_log off;
      add_header Cache-Control "public, max-age=15778463";
    }

    # SPA fallback (au cas o�)
    error_page 404 /index.html;
  }
}
